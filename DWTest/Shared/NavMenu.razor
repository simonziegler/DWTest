@inject IJSRuntime JSRuntime

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Docker Windows</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>

        <div class="nav-item px-3" style="margin-top: 60px;">
            <NavLink class="nav-link">
                <input type="checkbox" style="margin-right: 12px;" @bind="@SendPings" />
                Send Pings
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button id="keep-alive-button" class="btn btn-primary" @onclick="@(() => Console.WriteLine("Blazor button clicked"))">Keep Alive Button</button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool notifySendPings = false;
    private bool sendPings = false;
    private bool SendPings
    {
        get => sendPings;
        set
        {
            if (value != sendPings)
            {
                sendPings = value;
                notifySendPings = true;
            }
        }
    }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (notifySendPings)
        {
            await JSRuntime.InvokeVoidAsync("setSendPings", sendPings);
        }

        notifySendPings = false;
    }
}
